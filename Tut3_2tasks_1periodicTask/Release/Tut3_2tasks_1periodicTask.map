Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              ./croutine.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memcpy.o)
                              ./queue.o (memcpy)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memset.o)
                              ./tasks.o (memset)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strncpy.o)
                              ./tasks.o (strncpy)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
LOAD ./croutine.o
LOAD ./heap_1.o
LOAD ./led_blink.o
LOAD ./list.o
LOAD ./main.o
LOAD ./port.o
LOAD ./queue.o
LOAD ./tasks.o
LOAD ./timers.o
LOAD ./usart.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x18e0
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092      0x3b0 ./croutine.o
                0x0000000000000092                xCoRoutineCreate
                0x0000000000000198                vCoRoutineAddToDelayedList
                0x0000000000000212                vCoRoutineSchedule
                0x00000000000003f8                xCoRoutineRemoveFromEventList
 .text          0x0000000000000442       0x72 ./heap_1.o
                0x0000000000000442                pvPortMalloc
                0x0000000000000494                vPortFree
                0x0000000000000496                vPortInitialiseBlocks
                0x00000000000004a0                xPortGetFreeHeapSize
 .text          0x00000000000004b4       0x38 ./led_blink.o
                0x00000000000004b4                led_toggle_Init
                0x00000000000004ba                toggle_led
                0x00000000000004d0                led_toggle_Init2
                0x00000000000004d6                toggle_led2
 .text          0x00000000000004ec      0x124 ./list.o
                0x00000000000004ec                vListInitialise
                0x0000000000000508                vListInitialiseItem
                0x0000000000000510                vListInsertEnd
                0x000000000000055a                vListInsert
                0x00000000000005c8                vListRemove
 .text          0x0000000000000610       0xb2 ./main.o
                0x0000000000000610                uart_print_periodic
                0x0000000000000648                uart_print
                0x0000000000000662                main
 .text          0x00000000000006c2      0x26e ./port.o
                0x00000000000006c2                pxPortInitialiseStack
                0x0000000000000756                xPortStartScheduler
                0x00000000000007c0                vPortEndScheduler
                0x00000000000007c2                vPortYield
                0x0000000000000874                vPortYieldFromTick
                0x000000000000092a                __vector_7
 .text          0x0000000000000930      0x61a ./queue.o
                0x00000000000009b0                xQueueCreate
                0x0000000000000a70                xQueueGenericSend
                0x0000000000000c2c                xQueueGenericSendFromISR
                0x0000000000000cea                xQueueGenericReceive
                0x0000000000000e80                xQueueReceiveFromISR
                0x0000000000000f00                uxQueueMessagesWaiting
                0x0000000000000f10                uxQueueMessagesWaitingFromISR
                0x0000000000000f16                vQueueDelete
                0x0000000000000f30                xQueueIsQueueEmptyFromISR
                0x0000000000000f3c                xQueueIsQueueFullFromISR
 .text          0x0000000000000f4a      0x90a ./tasks.o
                0x0000000000000fb8                xTaskGenericCreate
                0x00000000000011c6                vTaskDelete
                0x000000000000125e                vTaskStartScheduler
                0x00000000000012b4                vTaskEndScheduler
                0x00000000000012c0                vTaskSuspendAll
                0x00000000000012cc                xTaskGetTickCount
                0x00000000000012e2                xTaskGetTickCountFromISR
                0x00000000000012ee                uxTaskGetNumberOfTasks
                0x00000000000012f4                vTaskIncrementTick
                0x0000000000001438                xTaskResumeAll
                0x0000000000001596                vTaskDelay
                0x00000000000015de                vTaskDelayUntil
                0x000000000000165e                vTaskSwitchContext
                0x0000000000001702                vTaskPlaceOnEventList
                0x000000000000173c                xTaskRemoveFromEventList
                0x00000000000017c0                vTaskSetTimeOutState
                0x00000000000017d6                xTaskCheckForTimeOut
                0x000000000000184c                vTaskMissedYield
 .text          0x0000000000001854        0x0 ./timers.o
 .text          0x0000000000001854       0x4a ./usart.o
                0x0000000000001854                USART_Init
                0x0000000000001868                USART_Transmit
                0x0000000000001870                USART_Receive
                0x0000000000001878                USART_putstring
 .text          0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memcpy.o)
 .text          0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memset.o)
 .text          0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strncpy.o)
                0x000000000000189e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000189e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000000189e       0x12 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memcpy.o)
                0x000000000000189e                memcpy
 .text.avr-libc
                0x00000000000018b0        0xe /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memset.o)
                0x00000000000018b0                memset
 .text.avr-libc
                0x00000000000018be       0x1e /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strncpy.o)
                0x00000000000018be                strncpy
                0x00000000000018dc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000018dc        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x00000000000018dc                exit
                0x00000000000018dc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000018dc        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000018e0                _etext = .

.data           0x0000000000800060       0x5c load address 0x00000000000018e0
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./croutine.o
 .data          0x0000000000800060        0x0 ./heap_1.o
 .data          0x0000000000800060        0x0 ./led_blink.o
 .data          0x0000000000800060        0x0 ./list.o
 .data          0x0000000000800060       0x55 ./main.o
 .data          0x00000000008000b5        0x0 ./port.o
 .data          0x00000000008000b5        0x0 ./queue.o
 .data          0x00000000008000b5        0x7 ./tasks.o
 .data          0x00000000008000bc        0x0 ./timers.o
 .data          0x00000000008000bc        0x0 ./usart.o
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memcpy.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memset.o)
 .data          0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strncpy.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00000000008000bc                . = ALIGN (0x2)
                0x00000000008000bc                _edata = .
                0x00000000008000bc                PROVIDE (__data_end, .)

.bss            0x00000000008000bc      0x2e5
                0x00000000008000bc                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000bc        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 .bss           0x00000000008000bc       0x3a ./croutine.o
                0x00000000008000bc                pxCurrentCoRoutine
 .bss           0x00000000008000f6      0x25a ./heap_1.o
 .bss           0x0000000000800350        0x0 ./led_blink.o
 .bss           0x0000000000800350        0x0 ./list.o
 .bss           0x0000000000800350        0x0 ./main.o
 .bss           0x0000000000800350        0x0 ./port.o
 .bss           0x0000000000800350        0x0 ./queue.o
 .bss           0x0000000000800350       0x51 ./tasks.o
                0x0000000000800350                pxCurrentTCB
 .bss           0x00000000008003a1        0x0 ./timers.o
 .bss           0x00000000008003a1        0x0 ./usart.o
 .bss           0x00000000008003a1        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008003a1        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008003a1        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000008003a1        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memcpy.o)
 .bss           0x00000000008003a1        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memset.o)
 .bss           0x00000000008003a1        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strncpy.o)
 *(.bss*)
 *(COMMON)
                0x00000000008003a1                PROVIDE (__bss_end, .)
                0x00000000000018e0                __data_load_start = LOADADDR (.data)
                0x000000000000193c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008003a1        0x0
                0x00000000008003a1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008003a1                PROVIDE (__noinit_end, .)
                0x00000000008003a1                _end = .
                0x00000000008003a1                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x888
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc       0x84 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memcpy.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000000750       0x6c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(memset.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000007bc       0xcc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(strncpy.o)
                                         0xd8 (size before relaxing)

.stabstr        0x0000000000000000       0xdf
 *(.stabstr)
 .stabstr       0x0000000000000000       0xdf /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Tut3_2tasks_1periodicTask.elf elf32-avr)
LOAD linker stubs
